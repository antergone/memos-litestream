[supervisord]
nodaemon=true ; 在前台运行 supervisor
logfile=/dev/null ; 将 supervisor 日志重定向到 stdout/stderr (或者指定文件)
logfile_maxbytes=0
pidfile=/tmp/supervisord.pid

[program:memos_service]
command=/usr/local/memos/start_memos_service.sh
autostart=true
autorestart=true
stdout_logfile=/dev/stdout ; 将程序 stdout 重定向到 supervisor 的 stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr ; 将程序 stderr 重定向到 supervisor 的 stderr
stderr_logfile_maxbytes=0
environment=
    DB_PATH="%(ENV_DB_PATH)s",
    LITESTREAM_REPLICA_BUCKET="%(ENV_LITESTREAM_REPLICA_BUCKET)s",
    LITESTREAM_REPLICA_PATH="%(ENV_LITESTREAM_REPLICA_PATH)s",
    LITESTREAM_REPLICA_ENDPOINT="%(ENV_LITESTREAM_REPLICA_ENDPOINT)s",
    LITESTREAM_ACCESS_KEY_ID="%(ENV_LITESTREAM_ACCESS_KEY_ID)s",
    LITESTREAM_SECRET_ACCESS_KEY="%(ENV_LITESTREAM_SECRET_ACCESS_KEY)s",
    MEMOS_MODE="%(ENV_MEMOS_MODE)s",
    MEMOS_PORT="%(ENV_MEMOS_PORT)s",
    TZ="%(ENV_TZ)s"
    ; 添加 memos 或 litestream 可能需要的其他环境变量

[program:memogram_service]
command=/usr/local/memos/start_memogram_service.sh
autostart=true ; supervisor 会尝试启动它，脚本内部会判断是否真正运行
autorestart=true
startsecs=10 ; 给 memos_service 一些启动时间
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
environment=
    BOT_TOKEN="%(ENV_BOT_TOKEN)s",
    MEMOS_TOKEN="%(ENV_MEMOS_TOKEN)s",
    TG_ID="%(ENV_TG_ID)s",
    ; 添加 memogram 可能需要的其他环境变量
